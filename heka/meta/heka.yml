log_collector:
  decoder:
    linux_syslog:
      engine: sandbox
      module_file: /usr/share/lma_collector/decoders/generic_syslog.lua
      module_dir: /usr/share/lma_collector_modules;/usr/share/heka/lua_modules
      config:
        syslog_pattern: '<%PRI%>%TIMESTAMP% %HOSTNAME% %syslogtag%%msg:::sp-if-no-1st-sp%%msg%\n'
        fallback_syslog_pattern: '%TIMESTAMP% %HOSTNAME% %syslogtag%%msg:::sp-if-no-1st-sp%%msg%\n'
    openstack_notification:
      engine: sandbox
      module_file: /usr/share/lma_collector/decoders/notification.lua"
      module_dir: /usr/share/lma_collector_modules;/usr/share/heka/lua_modules
      config:
        include_full_notification: 'false'
  input:
    cinder_log_stream:
      engine: logstreamer
      log_directory: "/var/log/cinder"
      file_match: '(?P<Service>.+)\.log\.?(?P<Seq>\d*)$'
      differentiator: ['cinder', '_', 'Service']
      priority: '["^Seq"]'
      decoder: "openstack_decoder"
      splitter: "openstack_splitter"
  filter:
    linux_hdd_errors:
      engine: sandbox
      module_file: /usr/share/lma_collector/filters/hdd_errors_counter.lua
      module_dir: /usr/share/lma_collector_modules;/usr/share/heka/lua_modules
      preserve_data: false
      message_matcher: "Type == 'log' && Logger == 'system.kern'"
      ticker_interval: 10
      hostname: '{{ grains.fqdn.split('.')[0] }}'
      grace_interval: 10
      patterns: '/error%s.+([sv]d[a-z][a-z]?)%d?/ /([sv]d[a-z][a-z]?)%d?.+%serror/'
  output: {}
  splitter:
    openstack_splitter:
      engine: token
      delimiter: "\n"
    rabbitmq_splitter:
      engine: token
      delimiter: "\n\n(=[^=]+====)"
      delimiter_eol: false
  encoder: {}
metric_collector:
  decoder:
    heka_collectd:
      engine: sandbox
      module_file: /usr/share/lma_collector/decoders/collectd.lua
      module_dir: /usr/share/lma_collector_modules;/usr/share/heka/lua_modules
      config:
        hostname: '{{ grains.fqdn.split('.')[0] }}'
        swap_size: 4294967296
    heka_http_check:
      engine: sandbox
      module_file: /usr/share/lma_collector/decoders/noop.lua
      module_dir: /usr/share/lma_collector_modules;/usr/share/heka/lua_modules
      config:
        msg_type: lma.http-check
    heka_metric:
      engine: sandbox
      module_file: /usr/share/lma_collector/decoders/metric.lua
      module_dir: /usr/share/lma_collector_modules;/usr/share/heka/lua_modules
      config:
        deserialize_bulk_metric_for_loggers: 'aggregated_http_metrics_filter hdd_errors_counter_filter'
  input: {}
  filter: {}
  output: {}
  splitter: {}
  encoder: {}
remote_collector:
  decoder: {}
  input: {}
  filter: {}
  output: {}
  splitter: {}
  encoder: {}
aggregator:
  decoder: {}
  input: {}
  filter: {}
  output: {}
  splitter: {}
  encoder: {}
